--BattleItemManager.txt
--@breif 战斗物品管理
--@data 2018/03/20

--@brief c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSVector3 = CS.UnityEngine.Vector3
local CSLog = CS.GameTool.Log

BattleMapItemDada = {
	
	itemPos=nil,
	id=nil,
	itemId=nil,
	itemNum=nil,
}


BattleItemManager = {
	m_MapItemList = nil,	--地图物品列表
	m_OwnerPropList = nil,		--道具
	m_OwnerEquipList = nil,		--装备列表

	m_CurItemDic = nil,

	m_viewList =nil


}
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function BattleItemManager:Create()
	local obj = {}
	setmetatable( obj, { __index = BattleItemManager })
	obj:Init()
	return obj
end

--@brief 初始化
function BattleItemManager:Init()
	CSLog("BattleItemManager:Init")
	 self.m_OwnerEquipList={}
	-- self.m_OwnerEquipList[1]={Name="大刀"}
	-- self.m_OwnerEquipList[2]={Name="护甲"}
	-- --self.m_OwnerEquipList[3]={Name="宠物"}
	-- self.m_OwnerEquipList[4]={Name="戒指"}
	-- self.m_OwnerEquipList[5]={Name="项链"}

	self:_AddEvent()
end


--@brief 监听事件
function BattleItemManager:_AddEvent()
	GBattleEvent:GetDispatcher():AddEvent(BATTLE_EVENT.BATTLE_MAP_ALL_ITEMS,self.OnUpdateAllItem,self)
end

--@brifef 移除事件
function BattleItemManager:_RemoveEvent()
	--GBattleEvent:GetDispatcher():RemoveEvent(BATTLE_EVENT.BATTLE_MAP_ALL_ITEMS,self._OnUpdateScenePos)
end

function BattleItemManager:OnUpdateAllItem(map_sight_s2c)
	CSLog("BattleItemManager:OnUpdateAllItem>>>>")
	if map_sight_s2c then 
		if map_sight_s2c.map_goods then  
			self.m_MapItemList={}
		 	for key,value in pairs(map_sight_s2c.map_goods) do
	 			local tempItem = {}
	 			tempItem.id=value.id
	 			tempItem.itemId=value.type_id
	 			tempItem.itemNum=value.num
	 			tempItem.itemPos=CSVector3(value.x,value.y,value.z)
	 			self.m_MapItemList[tempItem.id]=tempItem
	 			--CSLog("BattleItemManager: GetAllItem Id: ",value.id)
	 		end
	 	end

	 	if map_sight_s2c.roles_enter then
	 		self.m_OwnerEquipList={}
	 		local tempItem=map_sight_s2c.roles_enter.goods
	 		if tempItem then
	 			if tab_Equipment[tempItem.id] then
	 				local itemData = tab_Equipment[tempItem.id]
	 				if itemData.type~=6 then
	 					self.m_OwnerEquipList[itemData.type]=tempItem.type_id
	 					CSLog("BattleItemManager: RoleEquip Id: ",tempItem.type_id)
					end
				end
	 		else
	 			CSLog("没有数据：使用模拟数据")
	 			self.m_OwnerEquipList[1]=10001
				self.m_OwnerEquipList[2]=20001
				self.m_OwnerEquipList[5]=50001
	 		end
	 	end
	end		
	--GBattleEvent:GetDispatcher():RemoveEvent(BATTLE_EVENT.BATTLE_MAP_ALL_ITEMS,self._OnUpdateScenePos)

end

-- --@brief 
-- function BattleItemManager:UpdateCurItemDic(pos )
-- 	-- body
-- end

-- --@brief 
-- function BattleItemManager:UpdateCurItemById( ...,add )
-- 	-- body
-- end

-- rushView{
-- 	m_viewList[id]  = nil
-- 	m_viewList= Create
-- }
--@brief 移除
function BattleItemManager:Destroy()
	CSLog("BattleItemManager:Destroy")
	self:_RemoveEvent()
end


function GetCurMapBlockItem(pos)
	if not self.m_MapItemList then
		return {}
	end
	local  tempItems =nil
	for key,value in pairs(self.m_MapItemList) do
		local  tempPos = value.itemPos
		if(tempPos.x>=pos.min.x and tempPos<=pos.max.x and tempPos.y>=pos.min.y and tempPos.y<=pos.max.y) then
			tempItems[value.id]=value
		end
	end
	return {}
end





















--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————