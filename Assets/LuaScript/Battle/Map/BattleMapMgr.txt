--BattleMapMgr.txt

--@cbb c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSVector3 = CS.UnityEngine.Vector3
local CSVector2 = CS.UnityEngine.Vector2
local CSLog = CS.GameTool.Log
local CSMathf = CS.UnityEngine.Mathf


BattleMapMgr = {
	m_nRadius=nil,--刷新物品距离
	m_nInterval=nil,--可拾取距离
	m_rolePos=nil,
	m_curMapBlockItem=nil,
	m_battleMapView=nil,
	m_CanPickItem=nil,
	m_nTimeCount=nil
}

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 初始化
function BattleMapMgr:Init()
	CSLog("BattleMapMgr:Init")
	BattleMapMgr.m_nRadius=10
	BattleMapMgr.m_nViewRadius = 20
	BattleMapMgr.m_nInterval=0.8
	BattleMapMgr.m_nTimeCount=5
	BattleMapMgr.m_rolePos=CSVector3.zero
	BattleMapMgr.m_battleMapView=BattleMapView:Create()
	BattleMapView.m_CanPickItem={}
	BattleMapMgr:_AddEvent()
end

--@brief 移除
function BattleMapMgr:Destroy()
	CSLog("BattleMapMgr:Destroy")
	BattleMapMgr:_RemoveEvent()
end

--@brife 刷新镜头
function BattleMapMgr:Update()
	if BattleMapMgr.m_bMoveAction and BattleMapMgr.m_carmeraTrans then
		BattleMapMgr:_UpdateCameraActoin()
	end
end

--@brief 重置地图物品管理
function BattleMapMgr:Reset( )
	BattleMapMgr.m_rolePos = CSVector3.zero
end



--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 监听事件
function BattleMapMgr:_AddEvent()
	GBattleEvent:GetDispatcher():AddEvent(BATTLE_EVENT.UPDATE_SCENE_POS,BattleMapMgr._OnUpdateScenePos,BattleMapMgr)

end

--@brifef 移除事件
function BattleMapMgr:_RemoveEvent()
	GBattleEvent:GetDispatcher():RemoveEvent(BATTLE_EVENT.UPDATE_SCENE_POS,BattleMapMgr._OnUpdateScenePos)
end

--@brief 事件刷新(role)
function BattleMapMgr:_OnUpdateScenePos(pos)
	-- CSLog("BattleMapMgr:_OnUpdateScenePos",pos)
	BattleMapMgr:_UpdatePos(pos)
	BattleMapMgr:_UpdateRoleDistance(pos)
end

--刷新位置
function  BattleMapMgr:_UpdatePos(pos)
-- CSLog("BattleMapMgr:curPos  ",pos,BattleMapMgr.m_rolePos)
	if not pos then 
		pos=CSVector3.zero
	end
	
	local  distanceX = math.abs(pos.x - BattleMapMgr.m_rolePos.x)
	local distanceZ = math.abs(pos.z - BattleMapMgr.m_rolePos.z)
	if distanceZ>=BattleMapMgr.m_nRadius or distanceX>=BattleMapMgr.m_nRadius then
		BattleMapMgr.m_rolePos = pos
		ranges ={
			lx = pos.x - BattleMapMgr.m_nViewRadius,
			hx = pos.x + BattleMapMgr.m_nViewRadius,
			lz = pos.z - BattleMapMgr.m_nViewRadius,
			hz = pos.z + BattleMapMgr.m_nViewRadius,
		}
		BattleMapMgr.m_curMapBlockItem = GlobalBattleCtrl:GetCurMapClockItem(ranges)

		if ZTableLen(BattleMapMgr.m_curMapBlockItem) > 0 then
 			BattleMapMgr.m_battleMapView:UpdateMapView(BattleMapMgr.m_curMapBlockItem)
		end
	end
end

--@brief 地圖預設刷新
function BattleMapMgr:UpdateMapItem(needRemoveList,addItem)
	
	if needRemoveList then
		for key,value in pairs(needRemoveList) do
			if BattleMapMgr.m_curMapBlockItem[value] then
				BattleMapMgr.m_curMapBlockItem[value]=nil
				--CSLog("BattleMapMgr: removeId",value)
			end			
		end
	end
	if addItem then
		local tempPos = GlobalBattleCtrl:GetOwnerChara():GetPos()
		local ranges ={
			lx = tempPos.x - BattleMapMgr.m_nViewRadius,
			hx = tempPos.x + BattleMapMgr.m_nViewRadius,
			lz = tempPos.z - BattleMapMgr.m_nViewRadius,
			hz = tempPos.z + BattleMapMgr.m_nViewRadius,
		}
		--CSLog("地图预设添加",SerializeTable(addItem))
		for key,value in pairs(addItem) do
			if BattleMapMgr:CheckInRang(value.itemPos,ranges) then
				BattleMapMgr.m_curMapBlockItem[value.id]=value
			end
		end
		BattleMapMgr.m_battleMapView:UpdateMapView(BattleMapMgr.m_curMapBlockItem)
		BattleMapMgr.m_nTimeCount=5
		BattleMapMgr:_UpdateRoleDistance(tempPos)
	end
end

--@brief 判断范围
function BattleMapMgr:CheckInRang(pos,rangs)
--	CSLog("BattleItemManager:CheckInRang",pos,SerializeTable(rangs))
	if pos.x < rangs.lx then
		return false
	end
	if pos.x > rangs.hx then
		return false
	end
	if pos.z < rangs.lz then
		return false
	end
	if pos.z > rangs.hz then
		return false
	end

	return true
end

--检测role可拾取item
function BattleMapMgr:_UpdateRoleDistance(pos)
	if BattleMapMgr.m_curMapBlockItem then
		BattleMapMgr.m_nTimeCount=BattleMapMgr.m_nTimeCount + 1
		if BattleMapMgr.m_nTimeCount >5 then
			local tempPockItems={}
			for key,value in pairs(BattleMapMgr.m_curMapBlockItem) do
				local  distance = CSVector3.Distance(pos,value.itemPos)
				if distance <=BattleMapMgr.m_nInterval then
					local  temKey = value.id
					tempPockItems[temKey] = value
				end
			end
			BattleMapMgr:_IsDisEvent(tempPockItems)
			BattleMapMgr.m_nTimeCount = BattleMapMgr.m_nTimeCount % 5
		else
			BattleMapMgr.m_nTimeCount = BattleMapMgr.m_nTimeCount + 1
		end
	end
end

--@brief 是否存在近距离物品
function BattleMapMgr:_IsDisEvent(newItem)
--CSLog("BattleMapMgr ",SerializeTable(newItem))
	if ZTableLen(newItem) > 0 then
		GlobalBattleCtrl:GetUIModel():ShowPanel(BATTLE_UI_TYPE.QUICKBAG,newItem)
	else
		GlobalBattleCtrl:GetUIModel():ShowPanel(BATTLE_UI_TYPE.QUICKBAG)
	end
end