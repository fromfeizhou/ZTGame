--BattleDefine.txt
--@breif 战斗预定义
--@data 2018/3/10

--@brief c#引用
local CSVector3 = CS.UnityEngine.Vector3
local CSLog = CS.GameTool.Log
--@brief 碰撞预定义
BlockType = {
	None = 0,
	Collect = 1,
	Hide = 2,
}

--@breif 战斗预定义
BattleDefine = {

	CommandStep = 3,		--驱动帧步伐

	PlayerSpeed = 0.05,		--移动速度
	PlayerRadius = 1,		--碰撞半径
}

--@brief 方向预定义
BattleDir = {
	None = 0,	--停止
	Up = 1,		
	UpLeft = 2,
	Left = 3,

	DownLeft = 4,
	Down = 5,
	DownRight = 6,

	Right = 7,
	UpRight = 8,
}

BattleDirDefine = {
	UpLeft = CSVector3(-1, 0, 1),
	UpRight = CSVector3(1, 0, 1),
	DownLeft = CSVector3(-1, 0, -1),
	DownRight = CSVector3(1, 0, -1),
}
--@brief 获得对应方向的方向向量
function BattleDirDefine:GetDirPos(dir)
	if dir == BattleDir.Up then
		return CSVector3.forward

	elseif dir == BattleDir.UpLeft then
		return BattleDirDefine.UpLeft

	elseif dir == BattleDir.Left then
		return CSVector3.left

	elseif dir == BattleDir.DownLeft then
		return BattleDirDefine.DownLeft

	elseif dir == BattleDir.Down then
		return CSVector3.back

	elseif dir == BattleDir.DownRight then
		return BattleDirDefine.DownRight

	elseif dir == BattleDir.Right then
		return CSVector3.right

	elseif dir == BattleDir.UpRight then
		return BattleDirDefine.UpRight
	end
	return CSVector3.zero
end
--@brief 获得对应方向的方向向量列表
function BattleDirDefine:GetDirList(dir)
	if not BattleDirDefine.m_tList then
		BattleDirDefine.m_tList = {}
		
		BattleDirDefine.m_tList[BattleDir.Up] = {CSVector3.forward, CSVector3.right}
		BattleDirDefine.m_tList[BattleDir.Down] = {CSVector3.back, CSVector3.left}
		BattleDirDefine.m_tList[BattleDir.Left] = {CSVector3.left, CSVector3.forward}
		BattleDirDefine.m_tList[BattleDir.Right] = {CSVector3.right, CSVector3.back}

		BattleDirDefine.m_tList[BattleDir.UpLeft] = {BattleDirDefine.UpLeft, CSVector3.forward, CSVector3.left}
		BattleDirDefine.m_tList[BattleDir.UpRight] = {BattleDirDefine.UpRight, CSVector3.forward, CSVector3.right}
		BattleDirDefine.m_tList[BattleDir.DownLeft] = {BattleDirDefine.DownLeft, CSVector3.back, CSVector3.left}
		BattleDirDefine.m_tList[BattleDir.DownRight] = {BattleDirDefine.DownRight, CSVector3.back, CSVector3.right}
	end
	return BattleDirDefine.m_tList[dir] or {}
end


--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************全局事件 Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 全局战斗事件
GBattleEvent = {
	BattleDispatcher = nil,		--事件发送器
}


--@breif 网络事件
BATTLE_EVENT = {
	ADD_CHARACTER = "BATTLE_EVENT_ADD_CHARACTER", 	--添加玩家
	REMOVE_CHARACTER = "BATTLE_EVENT_REMOVE_CHARACTER",		--移除玩家
	UPDATE_CAMERA = "BATTLE_EVENT_UPDATE_CAMERA",		--刷新镜头
	UPDATE_SCENE_POS = "BATTLE_EVENT_UPDATE_SCENE_POS",	--刷新场景中心点		
}
--@breif 获取战斗事件管理器
function GBattleEvent:GetDispatcher()
	if GBattleEvent.BattleDispatcher == nil then 
		GBattleEvent.BattleDispatcher = EventDispatcher:Create() 
	end
	return GBattleEvent.BattleDispatcher
end

--@breif 清理战斗事件管理器（战斗退出清理）
function GBattleEvent:RemoveDispatcher()
	if GBattleEvent.BattleDispatcher == nil then 
		GBattleEvent.BattleDispatcher:RemoveEvent()
	end
	GBattleEvent.BattleDispatcher = nil
end

--@brief 战斗对象结构
function GBattleEvent:GetBattleData(battleId,careerType,pos)
	local data = {}
	data.battleId = battleId or 1
	data.careerType = careerType or CareerType.FashShi
	data.pos = pos or CSVector3(100,0,100)

	return data
end

--@brief 战斗对象结构
function GBattleEvent:GetCameraData(cameraType,pos)
	local data = {}
	data.cameraType = cameraType or BattleCameraType.Move
	data.pos = pos or CSVector3.zero
	return data
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************全局事件 End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
