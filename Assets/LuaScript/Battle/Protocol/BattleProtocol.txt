--BattleProtocol.txt
--@breif 战斗协议
--@data 2018/03/13
BattleProtocol = {
	m_battleCommandMgr = nil,		--命令操作管理者
	m_tCommandList = nil,		--操作集合

	m_tstClientCommandList = nil,		--客户端模拟驱动帧(技能测试使用)
}

--@brief c#引用
local CSLog = CS.GameTool.Log
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 初始化
function BattleProtocol:Init()
	CSLog("BattleProtocol:Init")
	BattleProtocol.m_battleCommandMgr = GlobalBattleCtrl.m_battleCommandMgr
end

--@brief 移除
function BattleProtocol:Destroy()
	CSLog("BattleProtocol:Destroy")
end

--@brief 移动
function BattleProtocol:SendMoveCommand(command)
	--技能测试
	if GameConfig.IsSkillDebugScene then
		BattleProtocol:__TsClientInputCommand(command)
	end
end

--@brief 接收驱动帧
function BattleProtocol:ParseCommand(commands)
	for frame,commandList in pairs(commands) do
		BattleProtocol.m_battleCommandMgr:AddCommandList(frame,commandList)
	end
	BattleCommandMgr:SetNextFrame()
end
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

--@brife 客户端模拟驱动帧发送(技能测试使用)
function BattleProtocol:__TsClientSendCommand()
	--发送驱动帧
	if not BattleProtocol.m_tstClientCommandList then
		BattleProtocol:__TsClientInputCommand({})
	else
		BattleProtocol:__TsClientInputCommand(BattleProtocol.m_tstClientCommandList)
	end

	BattleProtocol.m_tstClientCommandList = {}
end

--@brife 客户端模拟塞入驱动帧
function BattleProtocol:__TsClientInputCommand(command)
	local frame = BattleProtocol.m_battleCommandMgr.m_nClientFrame + BattleDefine.CommandStep

	if not BattleProtocol.m_tstClientCommandList then
		BattleProtocol.m_tstClientCommandList = {}
	end
	if not BattleProtocol.m_tstClientCommandList[frame] then
		BattleProtocol.m_tstClientCommandList[frame] = {}
	end
	table.insert( BattleProtocol.m_tstClientCommandList[frame], command )
end

