--BattleProtocol.txt
--@breif 战斗协议
--@data 2018/03/13

--@brief c#引用
local CSLog = CS.GameTool.Log
local CSVector3 = CS.CS.UnityEngine.Vector3


BattleProtocol = {
	m_tCommandList = nil,		--操作集合

	m_tstClientCommandList = nil,		--客户端模拟驱动帧(技能测试使用)
}

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 初始化
function BattleProtocol:Init()
	CSLog("BattleProtocol:Init")

	--@brief 监听协议
	if not GameConfig.IsSingleScene then
		BattleProtocol:_RegAll()
	end
end

--@brief 移除
function BattleProtocol:Destroy()
	CSLog("BattleProtocol:Destroy")
	--@brief 监听协议
	if not GameConfig.IsSingleScene then
		BattleProtocol:_UnRegAll()
	end
end
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 监听协议
function BattleProtocol:_RegAll()
	--视野信息,战斗推送
	ZTProtocol:Register(PROTOCOL.MAP_SIGHT, BattleProtocol._OnGetBattleData, BattleProtocol)
	ZTProtocol:Register(PROTOCOL.MAP_PICK_GOODS, BattleProtocol._OnPickItem, BattleProtocol)
	ZTProtocol:Register(PROTOCOL.MAP_UPDATE_GOODS, BattleProtocol._UpdateMapItem, BattleProtocol)
	ZTProtocol:Register(PROTOCOL.MAP_DISCARD_GOODS, BattleProtocol._OnDiscardItem, BattleProtocol)

	ZTProtocol:Register(PROTOCOL.SURVIVE_END, BattleProtocol._OnSurvieEnd, BattleProtocol)

end

--@brief 移除协议监听
function BattleProtocol:_UnRegAll()
	ZTProtocol:Unregister(PROTOCOL.MAP_SIGHT)
	ZTProtocol:Unregister(PROTOCOL.MAP_PICK_GOODS)
	ZTProtocol:Unregister(PROTOCOL.MAP_UPDATE_GOODS)
	ZTProtocol:Unregister(PROTOCOL.MAP_DISCARD_GOODS)

	ZTProtocol:Unregister(PROTOCOL.SURVIVE_END)
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************协议发送***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拾取物品
function BattleProtocol:SendMapPickItem(netId)
	local package = Package:Create(PROTOCOL.MAP_PICK_GOODS)
	package.data = {
		id=netId
	}
	CSLog("Send Pick Item", netId)
	NetWorkManager:SendNetMsg(package)
end

--@brief 丢弃
function BattleProtocol:SendDiscardItem(netId)
	local package = Package:Create(PROTOCOL.MAP_DISCARD_GOODS)
	package.data = {
		id = netId
	}
	CSLog(" Send discardItem Item", netId)
	NetWorkManager:SendNetMsg(package)
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************协议接收***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

--推送战斗人物地图物品数据
function BattleProtocol:_OnGetBattleData(map_sight_s2c)
	GlobalBattleCtrl:GetBattleData(map_sight_s2c)
	--GBattleEvent:GetDispatcher():DispatchEvent(BATTLE_EVENT.BATTLE_MAP_ALL_ITEMS,map_sight_s2c)
end

--@brief 丢弃物品
function BattleProtocol:_OnDiscardItem(map_discard_goods_s2c)
	CSLog(" Battle discard item is success ")
	GlobalBattleCtrl:DiscardBattleItem(map_discard_goods_s2c)
end

--@brief 拾取物品
function BattleProtocol:_OnPickItem(map_pick_goods_s2c)
	CSLog(" Battle pick item is success ")
	GlobalBattleCtrl:PickBattleItem(map_pick_goods_s2c)
	--GBattleEvent:GetDispatcher():DispatchEvent(BATTLE_EVENT.PICK_ITEM,map_pick_goods_s2c)
end

--@brieg 更新MapItem
function  BattleProtocol:_UpdateMapItem(map_update_goods)
	CSLog("BattleProtocol: Update Map Item  ")
	GlobalBattleCtrl:UpdateBattleMapItems(map_update_goods)
	--GBattleEvent:GetDispatcher():DispatchEvent(BATTLE_EVENT.UPDATE_MAP_ITEMS,map_update_goods)
end


--@brief 游戏结束
function BattleProtocol:_OnSurvieEnd(survive_end_s2c)
	local data = survive_end_s2c
	CSLog("BattleProtocol:_OnSurvieEnd",data.win)
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************测试代码***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

