--MapScrollPanel.txt
--@breif lua入口
--@data 2018/3/5

--@brief c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSVector3 = CS.UnityEngine.Vector3local
local CSVector2 = CS.UnityEngine.Vector2
local CSColor = CS.UnityEngine.Color
local CSMathf = CS.UnityEngine.Mathf


MapScrollPanel = {
	m_model = nil,
	
	m_transform = nil,
	m_gameObject = nil,

	m_scaleValue = 1,
	
	m_ScrollView = nil,
	m_ztCircleCur = nil,
	m_ztCircleDest = nil,

}

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function MapScrollPanel:Create(parent,model)
	local obj = {}
	setmetatable( obj, { __index = MapScrollPanel })
	obj.m_model = model
	obj:Init(parent)
	return obj
end

--@brief 初始化登录界面（加载面板资源）
function MapScrollPanel:Init(parent)
	CS.AssetManager.LoadAsset(PathManager:GetUIPanel("MapScrollPanel"),function(target,path)
 		if target then
 			self.m_gameObject = CSGameObject.Instantiate(target,parent)
 			self.m_transform = self.m_gameObject.transform
 			self.m_gameObject:SetActive(false)
			
			
 			--@brief 初始化登录界面UI控件
			PanelWidget:GetZTButton(self.m_transform,"ViewPort/btnClose",function() self:_Hide() end)
			PanelWidget:GetZTButton(self.m_transform,"btnTest",function() self:Test() end)

			PanelWidget:GetZTSlider(self.m_transform,"ViewPort/ZTSlider",function(value) self:onValueChanged(value) end)
			self.m_ScrollView = PanelWidget:GetScrollView(self.m_transform,"ViewPort/Scroll View")
			self.m_ztCircleCur = PanelWidget:GetZTCircle(self.m_ScrollView.content,"Circles/ZTCircleCur")
			self.m_ztCircleCur:Init(50)
			self.m_ztCircleCur:SetColor(CSColor.green)
			self.m_ztCircleDest = PanelWidget:GetZTCircle(self.m_ScrollView.content,"Circles/ZTCircleDest")
			self.m_ztCircleDest:Init(50)
			self.m_ztCircleDest:SetColor(CSColor.red)

		end
	end)
end

function MapScrollPanel:Test()
	self.m_model.m_manager:AddMapCircleCommand()
end


--@brief 面板命令帧每帧刷新
function MapScrollPanel:Update()

end

--@brief 面板逻辑命令帧每帧刷新
function MapScrollPanel:UpdateCommand()
	self:UpdateCircle(self.m_model.m_manager.m_circleInfo)
end

--@brief 显示登录面板
function MapScrollPanel:Show()
	self.m_gameObject:SetActive(true)
	LoginModel.m_pIsOpenedCreatePanel = true
end

--@brief 隐藏登录面板
function MapScrollPanel:_Hide()
	self.m_gameObject:SetActive(false)
	LoginModel.m_pIsOpenedCreatePanel = false
end

--@brief 销毁登录面板
function MapScrollPanel:Destroy()
end

function MapScrollPanel:onValueChanged(value)
	self.m_scaleValue = value;
	self.m_ScrollView.content.sizeDelta = CSVector2.one * self.m_scaleValue * 512
	self:UpdateCircle(self.m_model.m_manager.m_circleInfo)
end

function MapScrollPanel:UpdateCircle(circleInfo)
	local curCommandFrame = GlobalBattleCtrl:GetCurCommandFrame()
	if circleInfo and curCommandFrame < circleInfo.endFrame then 
		--当前圈
		local frameCnt = circleInfo.endFrame - circleInfo.startFrame
		local progressFrame = curCommandFrame - circleInfo.startFrame

		if progressFrame >= 0 then 
			local progress = progressFrame/frameCnt
			local lerpPos = CSVector2.Lerp (circleInfo.startPos,circleInfo.endPos,progress)
			local lerpRadius = CSMathf.Lerp (circleInfo.startRadius,circleInfo.endRadius,progress)
			self:_SetCircle(self.m_ztCircleCur,lerpPos,lerpRadius)
			
			--目标圈
			self:_SetCircle(self.m_ztCircleDest,circleInfo.endPos,	circleInfo.endRadius)
			
			--显示
			self.m_ztCircleCur:Show()	
			self.m_ztCircleDest:Show()
			return
		end
	end
	
	--隐藏
	self.m_ztCircleCur:Hide()	
	self.m_ztCircleDest:Hide()

end

	
function MapScrollPanel:_SetCircle(circle, pos, radius)
	circle:SetRadius(radius * self.m_scaleValue)
	circle.rectTransform.anchoredPosition = pos * self.m_scaleValue
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--********************NetWork Request Start***************************************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————


--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--********************NetWork Request End*****************************************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————


--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--********************NetWork Receive Start***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--********************NetWork Receive End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
