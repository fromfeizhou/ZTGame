--BattleBagPanelPanel.txt
--BattleBagPanel.txt
--@breif 移动控制UI
--@data 2018/03/11

--@brief c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSVector3 = CS.UnityEngine.Vector3
local CSVector2 = CS.UnityEngine.Vector2
local CSLog = CS.GameTool.Log
local  CSUnityScrollView = CS.UnityEngine.ScrollRect


BattleBagPanel = {
	m_panelName = "BattleBagPanel",
	
	m_parentRoot=nil,
	m_transform=nil,
	m_gameObject=nil,
	m_EquipList=nil,

	m_cellBg=nil,

}

RoleEquipType={

	Equip=1,--武器
	Cloth=2,--护甲
	Necklace=3,--项链
	Rin=4,--戒指
	Pet=5,--宠物
}

setmetatable( BattleBagPanel, { __index = UIBasePanel})

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function BattleBagPanel:Create(parent,model,panelData)
	local obj = {}
	setmetatable( obj, { __index = BattleBagPanel })
	obj.m_tPanelData = panelData
	obj:_LoadAssetPanel(parent,model)
	return obj
end

--@brief 面板被创建
function BattleBagPanel:onCreatePanel()	
	
	CSLog("BattleBagPanel:Init")
	self.m_parentRoot = parent
	self.m_EquipList={}

	self.mainRoot=self.m_transform:Find("Main");
	self.bagBtn=PanelWidget:GetButton(self.m_transform,"BagButton",function() self:OnClickBagBtn() end)	
	self.m_cellBg=self.mainRoot:Find("EquptRoot/Bg");
	self.m_cellBg=self.m_cellBg:GetComponent("RectTransform")
	for key, value in pairs(RoleEquipType) do     
	    self.m_EquipList[value]=BattleBagCell:Create(self.m_transform:Find("Main/EquptRoot/Equip"..value))
		local events={}
		events.OnUnEquip=function(id) self:_OnClickEquip(id) end 
		self.m_EquipList[value]:SetUIEvent(events,self.m_cellBg)
	end
end

--@brief 显示面板
function BattleBagPanel:onShow()

	if not self.m_gameObject then
		return
	end

	if self.m_tPanelData.isFirstCreate then--临时变量创建预设不show
		self:Hide()
	else
		self:_UpdateEquip(GlobalBattleCtrl:GetBattleRoleEquipedList())
		self.mainRoot.gameObject:SetActive( not self.mainRoot.gameObject.activeSelf)
	end
end


--@brief 添加事件监听
function BattleBagPanel:_AddEvents()
	GBattleEvent:GetDispatcher():AddEvent(BATTLE_EVENT.UPDATE_ROLE_EQUIPT,self._UpdateEquip,self)
end

--@brief 移除事件监听
function BattleBagPanel:_RemoveEvents()
	GBattleEvent:GetDispatcher():RemoveEvent(BATTLE_EVENT.UPDATE_ROLE_EQUIPT,self._UpdateEquip)
end

--@brief 注册网络门户
function BattleBagPanel:_RegNetFacade()
end

--@brief 注销网络门户
function BattleBagPanel:_UnRegNetFacade()
end

--@brief 销毁面板
function BattleBagPanel:onDestroy()
	--CSLog("BattleBagPanel:Destroy")
	self:_RemoveEvent()
	self.mainRoot=nil
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————


--------------ui事件
--点击背包按钮
function BattleBagPanel:OnClickBagBtn()
	self:_UpdateEquip(GlobalBattleCtrl:GetBattleRoleEquipedList())
	self.mainRoot.gameObject:SetActive( not self.mainRoot.gameObject.activeSelf)
end

--点击武器
function BattleBagPanel:_OnClickEquip(netId)
	BattleProtocol:SendDiscardItem(netId)
end

--------------ui事件end

--刷新装备
function  BattleBagPanel:_UpdateEquip(tempEquipDatas)
	tempEquipDatas = tempEquipDatas or {}
	--CSLog("BattleBagPanel:UpdateEquip ",SerializeTable(tempEquipDatas))
	for key, value in pairs(self.m_EquipList) do
		value:UpdateCell(tempEquipDatas[key])
	end
end

