--BattleUIMgr.txt
--@breif 战斗界面ui
--@data 2018/03/11

--@brief c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSRectTransform = CS.UnityEngine.RectTransform
local CSVector3 = CS.UnityEngine.Vector3
local CSVector2 = CS.UnityEngine.Vector2
local CSLayerMask = CS.UnityEngine.LayerMask
local CSLog = CS.GameTool.Log
local CSCanvas = CS.UnityEngine.Canvas

BattleUIMgr = {
	m_canvasComp = nil,		--画布
	m_mainUIContainer = nil,	--ui主容器
	m_ctrlContainer = nil,		--控制UI容器
	m_skillContainer = nil,		--技能UI容器
	m_playerContainer = nil,	--玩家容器
	m_hpContainer = nil,		--hp容器
	m_UIContainer = nil,		--地图容器
	m_BattleBagContainer=nil, 	--角色背包
	m_MapItemUIContainer=nil, 	--地图物品UI容器
};

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function BattleUIMgr:Create()
	local obj = {}
	setmetatable( obj, { __index = BattleUIMgr })
	obj:Init()
	return obj
end

--@brief 初始化
function BattleUIMgr:Init()
	CSLog("BattleUIMgr:Init")
	local canvas = CSGameObject.Find("Canvas")
	self.m_canvasComp = canvas:GetComponent(typeof(CSCanvas))
	local canvasTrans = canvas.transform
	self.m_mainUIContainer = self:_CreateContainer("MainUIContainer")
	self.m_mainUIContainer:SetParent(canvasTrans,false)
	--控制UI容器
	self.m_ctrlContainer = self:_CreateContainer("CtrlContainer",self.m_mainUIContainer)

	--技能UI容器
	self.m_skillContainer = self:_CreateContainer("SkillContainer",self.m_mainUIContainer)

	--玩家容器
	self.m_playerContainer = self:_CreateContainer("PlayerContainer",self.m_mainUIContainer)

	--hp容器
	self.m_hpContainer = self:_CreateContainer("HpContainer",self.m_mainUIContainer)
	
	--地图容器
	self.m_UIContainer = self:_CreateContainer("UIContainer",self.m_mainUIContainer)

	--地图物品UI容器
	self.m_MapItemUIContainer = self:_CreateContainer("MapPropUIContainer",self.m_mainUIContainer)


	--战斗UI模块
	self.m_UIModel = BattleModel:Create(self.m_UIContainer)

	--战斗背包
	self.m_BattleBagContainer=self:_CreateContainer("BattleBagContainer",self.m_mainUIContainer)
	
	--创建战斗ui
	self:_CreateBattleUI()

	--临时匹配按钮
	if not GameConfig.IsSingleScene then
		self:_CreateMatchUI()
	end
	
	self:_CreateQuickBag()
end

--@brief 移除
function BattleUIMgr:Destroy()
	CSLog("BattleUIMgr:Destroy")
	if self.m_UIModel then
		self.m_UIModel:Destroy()
		self.m_UIModel = nil
	end


	if self.m_ctrlContainer then
		CSGameObject.Destroy(self.m_ctrlContainer.gameObject)
		self.m_ctrlContainer = nil
	end

	if self.m_skillContainer then
		CSGameObject.Destroy(self.m_skillContainer.gameObject)
		self.m_skillContainer = nil
	end

	if self.m_playerContainer then
		CSGameObject.Destroy(self.m_playerContainer.gameObject)
		self.m_playerContainer = nil
	end

	if self.m_MapItemUIContainer then
		CSGameObject.Destroy(self.m_MapItemUIContainer.gameObject)
		self.m_MapItemUIContainer = nil
	end

	if self.m_hpContainer then
		CSGameObject.Destroy(self.m_hpContainer.gameObject)
		self.m_hpContainer = nil
	end
	
	if self.m_UIContainer then
		CSGameObject.Destroy(self.m_UIContainer.gameObject)
		self.m_UIContainer = nil
	end

	if self.m_BattleBagContainer then
		CSGameObject.Destroy(self.m_BattleBagContainer.gameObject)
		self.m_BattleBagContainer = nil
	end

	self.m_canvas = nil
end

--@brief 刷新ui容器 
function BattleUIMgr:Update()
	if GameConfig.IsSingleScene then
		self:_UpdateKeyBoardControl()
	end
	if self.m_UIModel then
		self.m_UIModel:Update()
	end
end

--@brief 获得画布
function BattleUIMgr:GetCanvasComp()
	return self.m_canvasComp
end

--@brief 获取头像容器
function BattleUIMgr:GetHeadContainer()
	return self.m_hpContainer
end

--@brief 获取地图物品UI容器
function BattleUIMgr:MapItemUIContainer()
	return self.m_MapItemUIContainer
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brife 创建容器
function BattleUIMgr:_CreateContainer(name,parentCon)
	local gameObject = CSGameObject(name,typeof(CSRectTransform))
	gameObject.layer = CSLayerMask.NameToLayer("UI")
	local rectTrans = gameObject:GetComponent(typeof(CSRectTransform))

	if parentCon then
		rectTrans:SetParent(parentCon,false)
	end
	
	rectTrans.pivot = CSVector2(0.5,0.5)
	rectTrans.anchorMin = CSVector2(0,0)
	rectTrans.anchorMax = CSVector2(1,1)
	rectTrans.offsetMin = CSVector2(0,0)
	rectTrans.offsetMax = CSVector2(0,0)
	return rectTrans
end

--@brief 创建ui
function BattleUIMgr:_CreateBattleUI()
	self:_CreateMoveJoystick()
	self:_CreateSkillJoystick()
	self:_CreateBattleBagPanel()
	self:_CreateMapRaderPanel()
end

--@brief 创建移动摇杆
function BattleUIMgr:_CreateMoveJoystick()
	MoveJoystick:Create(self.m_ctrlContainer)
end


--@brief 创建技能按钮
function BattleUIMgr:_CreateSkillJoystick()

	self.m_UIModel:ShowPanel(BATTLE_UI_TYPE.BATTLE_HUD)
	
end

-- 创建背包
function BattleUIMgr:_CreateBattleBagPanel()
	BattleBagPanel:Create(self.m_BattleBagContainer)
end

--@brief 创建匹配ui
function BattleUIMgr:_CreateMatchUI()
	CS.AssetManager.LoadAsset(PathManager:GetUIWidgets("ZTButtonTxt"),function(target,path)
		local gameObject = CSGameObject.Instantiate(target)
		local text = gameObject:GetComponentInChildren(typeof(CS.ZTText))
		local rectTrans = gameObject:GetComponent(typeof(CSRectTransform))
		rectTrans:SetParent(self.m_ctrlContainer,false)
		rectTrans.pivot = CSVector2(0.5,0.5)
		rectTrans.anchorMin = CSVector2(0,1)
		rectTrans.anchorMax = CSVector2(0,1)
		rectTrans.anchoredPosition = CSVector2(500,-100)
		text.text = "匹配"
		self.m_bMatch = true
		gameObject:GetComponent(typeof(CS.ZTButton)).onClick:AddListener(function()
			if self.m_bMatch then
				self.m_bMatch = false
				BattleCommandProtocol:SendMath()
				text.text = "退出"
			else
				text.text = "匹配"
				GlobalBattleCtrl:ExitBattle()
				self.m_bMatch = true
			end
		end)
	end)
end



--@brief 显示雷达地图
function BattleUIMgr:_CreateMapRaderPanel()
	self.m_UIModel:ShowPanel(BATTLE_UI_TYPE.MAP_RADAR)
end

function BattleUIMgr:_CreateQuickBag( ... )
	self.m_UIModel:ShowPanel(BATTLE_UI_TYPE.QUICKBAG)
end




-------------------------------------------------------test----------------------------------
local CSInput = CS.UnityEngine.Input
local CSKeyCode = CS.UnityEngine.KeyCode
BattleUIMgr.m_sendDir = false
BattleUIMgr.m_bSendDir = nil
--@brief 键盘移动
function BattleUIMgr:_UpdateKeyBoardControl()
	 if CSInput.GetKey(CSKeyCode.W) and CSInput.GetKey(CSKeyCode.D) then
        self:_SendMoveCommand(BattleDir.UpRight)
        BattleUIMgr.m_bSend = true
    elseif CSInput.GetKey(CSKeyCode.W) and CSInput.GetKey(CSKeyCode.A) then
        self:_SendMoveCommand(BattleDir.UpLeft)
        BattleUIMgr.m_bSend = true
    elseif CSInput.GetKey(CSKeyCode.S) and CSInput.GetKey(CSKeyCode.A) then
        self:_SendMoveCommand(BattleDir.DownLeft)
        BattleUIMgr.m_bSend = true
    elseif CSInput.GetKey(CSKeyCode.S) and CSInput.GetKey(CSKeyCode.D) then
        self:_SendMoveCommand(BattleDir.DownRight)
        BattleUIMgr.m_bSend = true
    elseif CSInput.GetKey(CSKeyCode.W) then
        self:_SendMoveCommand(BattleDir.Up)
        BattleUIMgr.m_bSend = true
    elseif CSInput.GetKey(CSKeyCode.S) then
        self:_SendMoveCommand(BattleDir.Down)
        BattleUIMgr.m_bSend = true
    elseif CSInput.GetKey(CSKeyCode.A) then
        self:_SendMoveCommand(BattleDir.Left)
        BattleUIMgr.m_bSend = true
    elseif CSInput.GetKey(CSKeyCode.D) then
        self:_SendMoveCommand(BattleDir.Right)
        BattleUIMgr.m_bSend = true
    elseif BattleUIMgr.m_bSend then
        self:_SendMoveCommand(BattleDir.None)
        BattleUIMgr.m_bSend = false
    end
end

--@brife 发送移动操作
function BattleUIMgr:_SendMoveCommand(dir)
	if BattleUIMgr.m_sendDir == dir then
		return
	end
	-- CSLog("MoveJoystick:_SendMoveCommand")
	BattleUIMgr.m_sendDir = dir
	BattleCommandProtocol:SendMoveCommand(dir)
end