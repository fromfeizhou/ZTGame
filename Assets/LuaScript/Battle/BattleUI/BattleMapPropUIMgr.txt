--BattleMapPropUIMgr.txt
--@breif 头像管理
--@data 2018/03/23

--@brief c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSVector3 = CS.UnityEngine.Vector3
local CSLog = CS.GameTool.Log
local CSGetWorldToScreenPoint = CS.GameTool.GetWorldToScreenPoint
local CSText = CS.UnityEngine.UI.Text

BattleMapPropUIMgr = {
	
	m_Panel=nil,
	m_itemRoot=nil,
	m_Item=nil,
	m_itemList=nil,
	m_canvas=nil,
}
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function BattleMapPropUIMgr:Create()
	local obj = {}
	setmetatable( obj, { __index = BattleMapPropUIMgr })
	obj:Init()
	return obj
end

--@brief 初始化
function BattleMapPropUIMgr:Init()
	CSLog("BattleMapPropUIMgr:Init")
	--self:_InitEvent()
	CS.AssetManager.LoadAsset(PathManager:GetBatteUINum("MapItemUIRoot"),function(target,path)
 		self.m_Panel = CSTransform.Instantiate(target.transform,GlobalBattleCtrl:GetHeadContainer())
		self:_InitUI()
	end)
end

--@brief 移除
function BattleMapPropUIMgr:Destroy()
	CSLog("BattleMapPropUIMgr:Destroy")
	if self.m_Panel then
		CSGameObject.Destroy(m_Panel)
		self.m_Panel = nil
	end
	self.m_itemRoot = nil
	self.m_Item=nil
	self.m_itemList=nil
	self.m_canvas=nil
	self:_RemoveEvent()
end

function BattleMapPropUIMgr:_AddEvent()
	--GBattleEvent:GetDispatcher():AddEvent(BATTLE_EVENT.UPDATE_SCENE_POS,self._OnUpdateScenePos,self)

end

--@brifef 移除事件
function BattleMapPropUIMgr:_RemoveEvent()
	--GBattleEvent:GetDispatcher():RemoveEvent(BATTLE_EVENT.UPDATE_SCENE_POS,self._OnUpdateScenePos)
end

--@brief 初始化组建
function BattleMapPropUIMgr:_InitUI()
	self.m_itemList={}
	self.m_canvas = GlobalBattleCtrl:GetCanvasComp()
	self.m_itemRoot = self.m_Panel:Find("Content")
	local transform = self.m_itemRoot:Find("Item")
	self.m_Item = transform.gameObject
	self.m_Item:SetActive(false)
	self:_AddEvent()
end

--@brief 事件刷新(role)
function BattleMapPropUIMgr:_OnUpdateScenePos(pos)
	
	if self.m_itemList then
		for key ,value in pairs(self.m_itemList) do
			if value.IsUse then
				local uiPos = CSGetWorldToScreenPoint(value.sencePos,self.m_canvas)
				value.gameObject.transform.position = {x = uiPos.x, y = uiPos.y , z = 0}
				local distance = CSVector3.Distance(pos,value.sencePos)
				value.gameObject:SetActive(distance < 5)
				if distance < 5 then
					local starScale = 1
					local endScale = 0.6
					local curScale = (endScale - starScale)*(distance / 5) + starScale
					value.gameObject.transform.localScale= {x= curScale,y = curScale,z = curScale}
				end
			end
		end
	end
end

--@brief 地图物资数据刷新调用
function BattleMapPropUIMgr:UpdateMapItemList(battleMapItemDatas)

	if true then
		return ail
	end

	
	if not self.m_itemList then
		return
	end
	local UseCount = 0
	local tempKeyList = {}
	for key,value in pairs(self.m_itemList) do
		if not battleMapItemDatas[key] then
			value.IsUse=false
			value.gameObject:SetActive(false)
			table.insert(tempKeyList,key)
		else
			UseCount = UseCount + 1
		end
	end

	for key,value in pairs(battleMapItemDatas) do
		local tempUIItem = self:_CreateItem(value)
		self:_UpdateItemData(tempUIItem,value)
	end

	local count = 1
	for i=#tempKeyList ,1,-1 do
		if not self.m_itemList[tempKeyList[i]] then --在_CreateItem中被替换
			UseCount = UseCount + 1
		else
			if UseCount > 20 then
				CSGameObject.Destroy(self.m_itemList[tempKeyList[i]].gameObject)
				self.m_itemList[tempKeyList[i]]=nil
			end
		end
	end
end

--@brief 创建UIItemObj (先从缓存拿)
function BattleMapPropUIMgr:_CreateItem(BattleMapItemDada)
	local  tempUIItem = self.m_itemList[BattleMapItemDada.id]
	if not tempUIItem then
		local tempKey = nil
		for key, value in pairs(self.m_itemList) do
			if not value.IsUse then
				tempKey = key
				break
			end
		end
		if tempKey then
			self.m_itemList[BattleMapItemDada.id] = self.m_itemList[tempKey]
			self.m_itemList[tempKey] = nil
			tempUIItem = self.m_itemList[BattleMapItemDada.id]
		else
			local tempObj = CSGameObject.Instantiate(self.m_Item,self.m_itemRoot)
			local tempText = PanelWidget:GetText(tempObj.transform,"Name")

			local mapUIItem = {
        		gameObject = tempObj,
        		tempText = tempText,
        		IsUse = false,
        		sencePos=nil,
    		}
    		self.m_itemList[BattleMapItemDada.id]=mapUIItem
    		tempUIItem = mapUIItem
    	end
	end
	--self:_UpdateItemData(tempUIItem,BattleMapItemDada)
	return tempUIItem
end

--@brief 刷新UIItem数据
function BattleMapPropUIMgr:_UpdateItemData(mapUIItem,BattleMapItemDada)
	if Tab_Equipment[BattleMapItemDada.itemId] then
		local  tempBaseData = Tab_Equipment[BattleMapItemDada.itemId]
		local uiPos = CSGetWorldToScreenPoint(BattleMapItemDada.itemPos,self.m_canvas)
		mapUIItem.tempText.text = tempBaseData.name
		mapUIItem.gameObject.transform.position = {x = uiPos.x, y = uiPos.y , z = 0}
		mapUIItem.IsUse = true
		mapUIItem.sencePos=BattleMapItemDada.itemPos
		mapUIItem.gameObject:SetActive(true)
	end
end

--@brief 刷新
function BattleMapPropUIMgr:Update()
end

