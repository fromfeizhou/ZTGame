--BattleCommandMgr.txt
--@breif 帧命令管理
--@data 2018/03/12
BattleCommandMgr = {
	m_tServerCommand = nil,		--服务器驱动帧
	m_nServerFrame = nil,	--服务器跑动帧
	m_nClientFrame = nil,	--客户端当前帧
}

--@brief c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSVector3 = CS.UnityEngine.Vector3
local CSLog = CS.GameTool.Log
local tInsert = table.insert
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function BattleCommandMgr:Create()
	local obj = {}
	setmetatable( obj, { __index = BattleCommandMgr })
	obj:Init()
	return obj
end

--@brief 初始化
function BattleCommandMgr:Init()
	CSLog("BattleCommandMgr:Init")

	self.m_tServerCommand = {}
	self.m_nClientFrame = 0
	self.m_nServerFrame = 0
end

--@brief 移除
function BattleCommandMgr:Destroy()
	CSLog("BattleCommandMgr:Destroy")
end

--@brief 刷新帧命令
function BattleCommandMgr:Update()
	if self.m_nClientFrame < self.m_tServerCommand then
		self:_RunCommand()
		--比驱动帧慢 加速
		if self.m_nClientFrame < self.m_tServerCommand - BattleDefine.CommandStep then
			self:_RunCommand()
			self:_RunCommand()
		end
	end
end

--@brife 设置下一驱动帧
function BattleCommandMgr:SetNextFrame()
	self.m_tServerCommand = self.m_tServerCommand + BattleDefine.CommandStep
end

--@brief 添加命令
function BattleCommandMgr:AddCommandList(commandsList)
	if not self.m_tServerCommand[frame] then
		self.m_tServerCommand[frame] = {}
	end
	tInsert(self.m_tServerCommand[frame],commands)
end



--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————



--@brief 命令往前驱动
function BattleCommandMgr:_RunCommand()
	--客户端往前驱动
	self.m_nClientFrame = self.m_nClientFrame + 1
	--过滤溢出帧 保证客户端逻辑帧在服务器允许范围
	if self.m_nClientFrame > self.m_nServerFrame then
		self.m_nClientFrame = self.m_nServerFrame
		return
	end


	local commands = self.m_tServerCommand[self.m_nClientFrame]
	if commands then
		self:_ParseCommand(commands)
	end
	self.m_tServerCommand = nil

	--刷新全局逻辑帧命令
	GlobalBattleCtrl:DataUpdate()
end

--@brief 解析帧命令
function BattleCommandMgr:_ParseCommand(commands)
	for i = 1, #commands do
		local command = commands[i]

	end
end

--@brief 移动命令
function BattleCommandMgr:_ParseMove(command)
	-- body
end
