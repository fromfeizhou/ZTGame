--MapCircleManager.txt
--@breif 地图毒圈管理器
--@data 2018/03/07

--@brief c#引用
local CSGameObject = CS.UnityEngine.GameObject
local CSTransform = CS.UnityEngine.Transform
local CSVector3 = CS.UnityEngine.Vector3
local CSVector2 = CS.UnityEngine.Vector2
local CSMathf = CS.UnityEngine.Mathf
local CSLog = CS.GameTool.Log




MapCircleManager = {
	m_model,
	m_circleInfo = nil,
	m_circleMoveing = false,
	m_curCircleInfo = nil,

	m_fbxDuCircle = nil,
	m_waitTime = nil,
	m_circleData = nil,
}

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function MapCircleManager:Create()
	local obj = {}
	setmetatable( obj, { __index = MapCircleManager })
	obj.m_model = GlobalBattleCtrl.m_battleUIMgr.m_UIModel
	obj:Init()
	return obj
end

--@brief 初始化
function MapCircleManager:Init()
	
	--添加事件监听
	self:_AddEvent()
	self:_LoadCircleFBX()
end

--@brief 移除
function MapCircleManager:Destroy()
	CSLog("MapCircleManager:Destroy")
	
	self:RemoveEvent()

end

--@brief 更新
function MapCircleManager:Update()
	self:UpdateMapCircleCommand()
	self.m_model:Update()
	self:UpdateDuCircle()
end

function MapCircleManager:SetMapCircleCommand(p_map_circle)

	self.m_circleData = {}
	for i=1,#p_map_circle do
		local netCircleData = p_map_circle[i]
		local tmpCircleData = {
			startFrame = netCircleData.begin_frame,
			endFrame = netCircleData.end_frame,
			startPos = CSVector2(netCircleData.x * 0.01,netCircleData.y * 0.01),
			endPos = CSVector2(netCircleData.dx * 0.01,netCircleData.dy * 0.01),
			startRadius = netCircleData.begin_radius * 0.01,
			endRadius = netCircleData.end_radius * 0.01,
		}
		table.insert(self.m_circleData,tmpCircleData)
	end
end
--@brief 增加地图指令
function MapCircleManager:UpdateMapCircleCommand()

	if not self.m_circleData then return end

	local curFrameNum = GlobalBattleCtrl:GetCurCommandFrame()

	if curFrameNum < self.m_circleData[1].startFrame then return end


	for i=1,#self.m_circleData do
		if curFrameNum >= self.m_circleData[i].startFrame and curFrameNum < self.m_circleData[i].endFrame then
			MapCircleManager.m_circleInfo = self.m_circleData[i]
			break
		end
	end

	if MapCircleManager.m_circleInfo then 
		if not MapCircleManager.m_curCircleInfo then
			MapCircleManager.m_curCircleInfo = {}
			MapCircleManager.m_curCircleInfo.Cur = {}
			MapCircleManager.m_curCircleInfo.Dest = {}
		end
		self:_UpdateCircleInfoCur()
		self:_UpdateCircleInfoDest()

		
		if curFrameNum < MapCircleManager.m_circleInfo.endFrame then
			local waitFrame = MapCircleManager.m_circleInfo.startFrame - curFrameNum
			self.m_waitTime = waitFrame/120
		end
		
	end
end

--@brief 场景毒圈移动
function MapCircleManager:UpdateDuCircle()
	if self.m_fbxDuCircle and  MapCircleManager.m_curCircleInfo and MapCircleManager.m_curCircleInfo.Cur then 
		local curCircleInfo = MapCircleManager.m_curCircleInfo.Cur
		self.m_fbxDuCircle.transform.position = CSVector3(curCircleInfo.pos.x,0,curCircleInfo.pos.y)
		self.m_fbxDuCircle.transform.localScale = CSVector3.one * curCircleInfo.radius
	end
end

--@brief 场景毒圈加载
function MapCircleManager:_LoadCircleFBX()
	CS.AssetManager.LoadAsset(PathManager:GetModelPath("duquan/DuCircle"),function(target,path)
 		if target then
 			self.m_fbxDuCircle = CSGameObject.Instantiate(target)
		end
	end)
end

--@brief 逻辑帧刷新
function MapCircleManager:UpdateCommand()
	if MapCircleManager.m_circleInfo then 

		MapCircleManager.m_circleMoveing = (GlobalBattleCtrl:GetCurCommandFrame() < MapCircleManager.m_circleInfo.endFrame)

		if MapCircleManager.m_circleMoveing then 
			self:_UpdateCircleInfoCur()
		end
	end
end

--@brief 获取当前读取数据（table.pos: 毒圈坐标，table.radius：毒圈半径）
function MapCircleManager:GetCurCircleInfo()
	if MapCircleManager.m_curCircleInfo and MapCircleManager.m_curCircleInfo.Cur then
		return MapCircleManager.m_curCircleInfo.Cur
	end
	return nil
end

--@brief 更新当前圈数据
function MapCircleManager:_UpdateCircleInfoCur()

	--总帧数
	local frameCnt = MapCircleManager.m_circleInfo.endFrame - MapCircleManager.m_circleInfo.startFrame
	--当前缩圈帧索引
	local progressFrame = GlobalBattleCtrl:GetCurCommandFrame() - MapCircleManager.m_circleInfo.startFrame
	local progress = progressFrame/frameCnt

	--缩圈进度
	MapCircleManager.m_curCircleInfo.Cur = {
		pos = CSVector2.Lerp (MapCircleManager.m_circleInfo.startPos,MapCircleManager.m_circleInfo.endPos,progress),
		radius = CSMathf.Lerp (MapCircleManager.m_circleInfo.startRadius,MapCircleManager.m_circleInfo.endRadius,progress),
	}
end
--@briefF 更新目标圈数据
function MapCircleManager:_UpdateCircleInfoDest()
	MapCircleManager.m_curCircleInfo.Dest = {
		pos = MapCircleManager.m_circleInfo.endPos,
		radius = MapCircleManager.m_circleInfo.endRadius,
	}
end
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 添加事件监听
function MapCircleManager:_AddEvent()
	GBattleEvent:GetDispatcher():AddEvent(BATTLE_EVENT.ADD_CHARACTER,self._OnAddCharacter,self)
end

--@brief 移除事件监听
function MapCircleManager:_RemoveEvent()
	GBattleEvent:GetDispatcher():RemoveEvent(BATTLE_EVENT.ADD_CHARACTER,self._OnAddCharacter)
end
