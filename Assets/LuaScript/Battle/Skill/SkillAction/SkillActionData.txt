--SkillActionData.txt
--@breif 技能action数据
--@data 2018/03/19

--@brief c#引用
local CSLog = CS.GameTool.Log
local CSVector3 = CS.UnityEngine.Vector3

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--基础数据
SkillActionData = {
	m_tOwner = nil,		--拥有者
	m_nStartFrame = 0, --触发时间
	m_nFrameMax = -1,	--存在时间
	m_tSkillPos = nil,	--技能位置
	m_nTargetId = nil,	 --指定目标
}
--@brief 拷贝原表
function SkillActionData:Create(owner,frame,skillPos,targetId)
	local obj = {}
	setmetatable( obj, { __index = SkillActionData })
	obj:Init(owner,frame,skillPos,targetId)
	return obj
end

--@brief 初始化
function SkillActionData:Init(owner,frame,skillPos,targetId)
	self.m_tOwner = owner
	self.m_nStartFrame = frame
	self.m_tSkillPos = skillPos
	self.m_nTargetId = targetId
	self.m_nFrameMax = -1
end
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************分割线***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

--播放动作
SkillActionFaceData = {
	m_nFaceType = nil,	--动作名
}
--@breif SkillActionData
setmetatable( SkillActionFaceData, { __index = SkillActionData})

--@brief 拷贝原表
function SkillActionFaceData:Create(owner,frame,skillPos,targetId,param)
	local obj = {}
	setmetatable( obj, { __index = SkillActionFaceData })
	obj:Init(owner,frame,skillPos,targetId,param)
	return obj
end

--@brief 初始化
function SkillActionFaceData:Init(owner,frame,skillPos,targetId,param)
	--基类实现
	SkillActionData.Init(self,owner,frame,skillPos,targetId)
	self.m_nFaceType = param[1]
end
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************分割线***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

--播放动作
SkillActionPlayData = {
	m_sAnimName = "",	--动作名
}
--@breif SkillActionData
setmetatable( SkillActionPlayData, { __index = SkillActionData})

--@brief 拷贝原表
function SkillActionPlayData:Create(owner,frame,skillPos,targetId,param)
	local obj = {}
	setmetatable( obj, { __index = SkillActionPlayData })
	obj:Init(owner,frame,skillPos,targetId,param)
	return obj
end

--@brief 初始化
function SkillActionPlayData:Init(owner,frame,skillPos,targetId,param)
	--基类实现
	SkillActionData.Init(self,owner,frame,skillPos,targetId)
	self.m_sAnimName = param[1]
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************分割线***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

--播放动作
SkillActionColliderData = {
	m_ztCollider = nil,		--碰撞体
	m_skillLayer = nil,		--放置层次(起点)
	m_nOffset = nil,		--偏移

	m_targetType = nil,		--目标类型
	m_spriteEffName = nil,	--特效名字
	m_nMoveActionId = nil,	--动作id
	m_nColliderMax = nil,	--碰撞总数
}
--@breif SkillActionData
setmetatable( SkillActionColliderData, { __index = SkillActionData})

--@brief 拷贝原表
--@param 碰撞
function SkillActionColliderData:Create(owner,frame,skillPos,targetId,param)
	local obj = {}
	setmetatable( obj, { __index = SkillActionColliderData })
	obj:Init(owner,frame,skillPos,targetId,param)
	return obj
end

--@brief 初始化{ "半径", "运动id", "层次", "偏移x", "偏移y","目标类型", "存在时间","碰撞总数","特效名字" };
function SkillActionColliderData:Init(owner,frame,skillPos,targetId,param)
	--基类实现
	SkillActionData.Init(self,owner,frame,skillPos,targetId)
	local radius = param[1] == -1 and 0.5 or param[1]
	local collider = ZTCollider:Create(0,0,0,radius,0)
	self.m_ztCollider = collider
	self.m_nMoveActionId = param[2]
	self.m_skillLayer = param[3] or SkillLayerType.Hero
	self.m_nOffset = CSVector3(param[4],0,param[5])
	
	self.m_targetType = param[6] or SkillTargetType.Target
	self.m_nFrameMax = param[7] or -1
	self.m_nColliderMax = param[8]
	self.m_spriteEffName = param[9] == -1 and nil or param[9]

end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************分割线***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--添加特效
SkillActionSpEffData = {
	m_spriteEffName = "",	--动作名
	m_skillLayer = "",		--放置层次
	m_nOffset = nil,		--偏移
}
--@breif SkillActionData
setmetatable(SkillActionSpEffData, { __index = SkillActionData})

--@brief 拷贝原表
function SkillActionSpEffData:Create(owner,frame,skillPos,targetId,param)
	local obj = {}
	setmetatable( obj, { __index = SkillActionSpEffData })
	obj:Init(owner,frame,skillPos,targetId,param)
	return obj
end

--@brief 初始化  {"特效名字","层次","存在时间","偏移x","偏移z"}
function SkillActionSpEffData:Init(owner,frame,skillPos,targetId,param)
	--基类实现
	SkillActionData.Init(self,owner,frame,skillPos,targetId)
	self.m_spriteEffName = param[1]
	self.m_skillLayer = param[2] or SkillLayerType.Hero
	self.m_nFrameMax = param[3] == -1 and 300 or param[3]
	self.m_nOffset = CSVector3(param[4],0,param[5])
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************分割线***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--玩家位移
SkillActionMoveData = {
	m_nMoveActionId = nil,
}
--@breif SkillActionData
setmetatable(SkillActionMoveData, { __index = SkillActionData})

--@brief 拷贝原表
function SkillActionMoveData:Create(owner,frame,skillPos,targetId,param)
	local obj = {}
	setmetatable( obj, { __index = SkillActionMoveData })
	obj:Init(owner,frame,skillPos,targetId,param)
	return obj
end

--@brief 初始化 
function SkillActionMoveData:Init(owner,frame,skillPos,targetId,param)
	--基类实现
	SkillActionData.Init(self,owner,frame,skillPos,targetId)
	self.m_nMoveActionId = param[1]
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************分割线***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--移动锁定
SkillActionStateLockedData = {
	m_nMoveLocked = -1,		--移动锁定
	m_nFaceLocked = -1,		--方向锁定
	m_nAnimaLocked = -1,		--动画锁定
}
--@breif SkillActionData
setmetatable(SkillActionStateLockedData, { __index = SkillActionData})

--@brief 拷贝原表
function SkillActionStateLockedData:Create(owner,frame,skillPos,targetId,param)
	local obj = {}
	setmetatable( obj, { __index = SkillActionStateLockedData })
	obj:Init(owner,frame,skillPos,targetId,param)
	return obj
end

--@brief 初始化 
function SkillActionStateLockedData:Init(owner,frame,skillPos,targetId,param)
	--基类实现
	SkillActionData.Init(self,owner,frame,skillPos,targetId)
	local frameMax = param[1]
	for i,v in pairs(param) do
		if frameMax < v then
			frameMax = v
		end
	end
	self.m_nFrameMax = frameMax
	self.m_nMoveLocked = param[1] or -1
	self.m_nFaceLocked = param[2] or -1
	self.m_nAnimaLocked = param[3] or -1
end



--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————


