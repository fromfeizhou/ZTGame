--SkillActionCollider.txt
--@breif 碰撞
--@data 2018/03/22

--@brief c#引用
local CSLog = CS.GameTool.Log


SkillActionCollider = {
	m_nOffsetX = nil,	--偏移X
	m_nOffsetZ = nil,	--偏移Z
	m_ztCollider = nil,		--碰撞体
	m_skillLayer = nil,		--位置类型
	m_targetType = nil,		--目标类型

	m_colliderView = nil,	--碰撞显示
}

--@breif 继承SkillAction
setmetatable( SkillActionCollider, { __index = SkillAction})

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public Begin*************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 拷贝原表
function SkillActionCollider:Create(actionData)
	local obj = {}
	setmetatable( obj, { __index = SkillActionCollider })
	obj:Init(actionData)
	return obj
end

--@brief 初始化
function SkillActionCollider:Init(actionData)
	--继承实现
	SkillAction.Init(self,actionData)
	self.m_nOffsetX = self.m_tActionData.m_nOffsetX
	self.m_nOffsetZ = self.m_tActionData.m_nOffsetZ
	self.m_ztCollider = self.m_tActionData.m_ztCollider
	self.m_skillLayer = self.m_tActionData.m_skillLayer
	self.m_targetType = self.m_tActionData.m_targetType
	self:_SetStartPos()
end

--@brief 开始
function SkillActionCollider:Start()
	--继承实现
	SkillAction.Start(self)
end


-- --@brief 更新
function SkillActionCollider:Update()
	--继承实现
	SkillAction.Update(self)
	self:_UpdateColliderView()
end

--@brief 结束
function SkillActionCollider:Done()
	--继承实现
	SkillAction.Done(self)
end

--@brief 移除
function SkillActionCollider:Destroy()
	--继承实现
	SkillAction.Destroy(self)
	if self.m_colliderView then
		CS.UnityEngine.GameObject.Destroy(self.m_colliderView)
		self.m_colliderView = nil
	end
end

--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--*******************************************************Public End***************************************************************
--————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
--@brief 获得方向
function SkillActionCollider:_GetDir(posBegin,posEnd)
	return posEnd - posBegin
end


--@brief 设置起始位置
function SkillActionCollider:_SetStartPos()
	if self.m_skillLayer == SkillLayerType.Hero then
		self.m_ztCollider:SetPos(self.m_tOwner:GetPos())
	elseif self.m_skillLayer == SkillLayerType.SkillPos then
		self.m_ztCollider:SetPos(self.m_tSkillPos)
	end

	self.m_ztCollider.m_tPos.x = self.m_ztCollider.m_tPos.x + self.m_nOffsetX
	self.m_ztCollider.m_tPos.z = self.m_ztCollider.m_tPos.z + self.m_nOffsetZ

	if GameConfig.IsSkillDebugScene then
		self:_UpdateColliderView()
	end
end

--@brief 显示碰撞
function SkillActionCollider:_UpdateColliderView()
	if not self.m_colliderView then
		self.m_colliderView =  CS.UnityEngine.GameObject.CreatePrimitive(CS.UnityEngine.PrimitiveType.Cylinder);
	end
	local scaleX = self.m_ztCollider.m_nRaidus
	local scaleY = (self.m_ztCollider.m_nRaidus * 2 + self.m_ztCollider.m_nHeight) /2
	self.m_colliderView.transform.localScale = {x = scaleX,y = scaleY,z = scaleX}
	-- 0.5 = x,z 1
	-- 0 = 0.25
	-- 1 = 2
	-- 2 = 3

    self.m_colliderView.transform.position = self.m_ztCollider.m_tPos;
end