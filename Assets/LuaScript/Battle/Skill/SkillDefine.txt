--SkillDefine.txt
--@breif 技能预定义
--@data 2018/3/19

--@brief 行为定义
SkillActionType = {
	Face = 0,		--朝向调整
	Play = 1,		--播放动作
	Sound = 2,		--播放声音
	Collider = 3,	--碰撞
	SpEffect = 4,	--特效
	PlayerMove = 5,	--玩家位移
}

--@brief 技能位置类型(计算 碰撞特效等放置位置选项)
SkillLayerType = {
	Hero = 0,	--玩家
	Scene = 1,	--场景
	SkillPos = 2,	--技能位置（场景）
}
--@brief 技能朝向(操作点)
SkillFaceType = {
	UpSkill = 0,	--朝向技能点
	BackSkill = 1,	--背向技能点
}

--@brief 技能目标类型（技能效果 或技能操作指向）
SkillTargetType = {
	Self = 0,	--自己
	Team = 1,	--队友
	Enemy = 2,	--敌人
	All = 3,	--所有人
	Appoint = 4,	--指定目标
}

--@brief 技能效果类型
SkillEffectType = {
	None = 0,		--无
	Shake = 1,		--震屏
	Hurt  = 2,       --伤害
	AddBuff = 3,	--添加buff
	RemoveBuff = 4,		--移除buff
	Arrtibute = 5,      --属性修改(改变血量等 一次性修改类型)
}

--@brief属性类型
AttributeType = {
	HpMax = 1,	--最大血量
	AttackMin = 2,	--最小攻击力
	AttackMax = 3, --最大攻击
	Defense = 4,	--防御
	AttackSpeed = 5, --攻速

	HpRec = 6,	--生命恢复
	MpMax = 7,		--能量
	Luck = 8,		--幸运值
	Curse = 9,		--诅咒
	MoveSpeed = 10,	-- 移速变动

	AttackAcc = 11,		--伤害加成
	HurtDec = 12,	--伤害减免
	CDAcc = 13,		--技能冷却加成
	Hp = 14,		--当前血量
	Mp = 15,		--当前能量
	
	MpRec = 16,		--能量回复
}

--@brief buff类型
BuffType = {
	Common = 1,	--通用类型
	Attribute = 2, --额外属性固定值（纳入属性计算）
	DynamicAttribute = 3, --动态属性（按某些计数 加成指定属性 例如按当前血量百分比 加攻击力）
	CharaAttribute = 4,		--修改人物属性buff（中毒等 持续改变人物属性）
	MagicShield = 5,	--魔法盾
}


--@brief c#引用
local CSLog = CS.GameTool.Log
local CSVector3 = CS.UnityEngine.Vector3
local CSAngleBetween = CS.GameTool.SignedAngleBetween
local CSQuaternion = CS.UnityEngine.Quaternion
--@brief 技能解析全局方法
SkillDefine = {
	
}

--@brief 获得起始位置
--@param owner	添加角色
--@param offset  偏移量
--@param layerType 技能层次类型
--@param skillPos 技能位置
function SkillDefine:GetStartPosByLayer(owner,offset,layerType,skillPos)
	local pos = nil
	if layerType == SkillLayerType.Hero then
		pos = owner:GetColliderPos()
	else
		pos = skillPos
	end
	--CSLog("SkillDefine:GetStartPosByLayer",layerType,pos,skillPos)
	local face = owner:GetFaceDir()
	local angle = CSAngleBetween(face,CSVector3.forward)
 	
	local rot = CSQuaternion.Euler(0, angle, 0)
	offset =  rot * offset
	pos.x = pos.x + offset.x
	pos.z = pos.z + offset.z
	return pos
end